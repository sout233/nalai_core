name: Rust Release CI

on:
  push:
    tags:
      - "[0-9]+.[0-9]+.[0-9]+"

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        rust: ['stable']
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ matrix.rust }}
        override: true

    - name: Build project
      run: cargo build --release

    - name: Rename and Archive artifact
      if: matrix.os == 'windows-latest'
      run: |
        mkdir artifacts
        mv target/release/nalai_core.exe artifacts/
        cd artifacts
        mv nalai_core.exe nalai_core-v${{ github.ref_name }}.exe
        zip nalai_core-v${{ github.ref_name }}-windows.zip nalai_core-v${{ github.ref_name }}.exe
      shell: bash

    - name: Rename and Archive artifact
      if: matrix.os == 'ubuntu-latest'
      run: |
        mkdir artifacts
        mv target/release/nalai_core artifacts/
        cd artifacts
        mv nalai_core nalai_core-v${{ github.ref_name }}-linux
        tar czf nalai_core-v${{ github.ref_name }}-linux.tar.gz nalai_core-v${{ github.ref_name }}-linux
      shell: bash

    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.os }}-build
        path: artifacts/

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
    - name: Download Artifacts
      uses: actions/download-artifact@v3

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref_name }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./windows-latest-build/nalai_core-v${{ github.ref_name }}-windows.zip
        asset_name: nalai_core-v${{ github.ref_name }}-windows.zip
        asset_content_type: application/zip

    - name: Upload Linux Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./ubuntu-latest-build/nalai_core-v${{ github.ref_name }}-linux.tar.gz
        asset_name: nalai_core-v${{ github.ref_name }}-linux.tar.gz
        asset_content_type: application/gzip